{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>This project aims to provide a better developer experience while developing <code>wsadmin</code> scripts for IBM\u00ae Websphere Application Server.</p> <p>It does so by providing:</p> <ul> <li>Autocompletion through the intellisense.</li> <li>Type hints (function parameters and function return types)</li> </ul> <p>This leads to lots of advantages to the developer, such as:</p> <ul> <li>Faster development, since you don't need to leave the editor to know what was the name of some method.</li> <li>Less errors, since you don't need to manually re-type the method names and an error will show up if you mistype the methods.</li> </ul> <p>Warning</p> <p>The <code>wsadmin</code> scripting tool only supports Jython up to 2.7 (some still have Jython 2.1!), so the following requirements must still be satisfied:</p> <ul> <li>you MUST use Python 2 syntax (check the Jython version to know which one you'll need to target)</li> <li>some packages available on development environments might not be available or might have some differences.</li> </ul> <p>Make sure to check that your script matches your workplace/environment requirements before submitting it. This package DOES NOT in any way prevent you from writing bugged code, or could even contain old modules not used anymore in the official documentation (since it was originally written for my workplace production environment using Websphere Application Server 8.5.5/9.0 and Jython 2.1).</p> <p>Always check that your environment requirements/versions are the same as this library. </p>"},{"location":"#gallery","title":"Gallery","text":"<p>Here's some screenshots showing the features of this package. The IDE I'm using here is Visual Studio Code.</p> <p> </p> Autocompletion for the <code>AdminControl</code> command. <p> </p> Type hint for function parameters as well as return types. <p> </p> An error will show up if you mistype the method. <p> </p> Autocompletion based on the <code>AdminConfig.attributes(...)</code> return type (<code>str</code>)."},{"location":"#disclaimer","title":"Disclaimer","text":"<p>This is an unofficial package created for speeding up the development process and is not in any way affiliated with IBM\u00ae. All trademarks and registered trademarks are the property of their respective company owners.</p> <p>The code does not include any implementation detail, and includes only the informations (such as parameter numbers, types and descriptions) publicly available on the official Websphere Application Server\u00ae documentation.</p>"},{"location":"getting-started/","title":"Getting started","text":"<p>This section will guide you through the installation and setup of the development environment.</p>"},{"location":"getting-started/#installation","title":"Installation","text":"<p>The first step is to install the <code>wsadmin-type-hints</code> package.</p> <ul> <li> <p>Using <code>pip</code> (global install): <pre><code>pip install wsadmin-type-hints\n</code></pre></p> </li> <li> <p>Using <code>poetry</code>: <pre><code>poetry add wsadmin-type-hints --group dev \n</code></pre></p> </li> <li> <p>Using <code>pipenv</code>: <pre><code>pipenv install --dev wsadmin-type-hints\n</code></pre></p> </li> <li> <p>For other dependency managers (such as pdm or hatch) see the respective documentation...</p> </li> </ul> <p>Note</p> <p>If installed inside a virtual environment, you may need to activate it first, to be able to use it.</p>"},{"location":"getting-started/#usage","title":"Usage","text":"<p>The <code>wsadmin-type-hints</code> package is intended to be used to provide type hints to the Python interpreter used by IDE language servers (such as Pylance).  Because of this, the functions do not contain actual code and their body is always empty.</p> <p>The following steps will allow you to make use of modern IDE intellisense for <code>wsadmin</code> objects:</p> <ol> <li> <p>To differentiate between the development and production environment we can use a <code>try..except</code> block: <pre><code>try:\n(AdminControl, AdminConfig, AdminApp, AdminTask, Help)\nexcept NameError:\n# wsadmin objects are not defined, so this is the development environment.\nfrom wsadmin_type_hints import *   # type: ignore\nelse:\nprint(\"Production environment, i'm not needed here \ud83d\ude03\")\n</code></pre>     This block could even be left as-is in the code deployed on the production server (maybe leaving out the emoji before uploading \ud83d\ude07), since it won't ever reach the import (and even then the script would simply fail because of the <code>wsadmin-type-hints</code> package not being there).     The <code># type: ignore</code> is used to ignore the Pylance warning <code>Wildcard import from a library not allowed</code></p> </li> <li> <p>Use the <code>wsadmin</code> objects like always:  <pre><code>current_cell = AdminControl.getCell()\nprint(\"Current cell: %s\" % current_cell)\n</code></pre></p> </li> </ol>"},{"location":"resources/","title":"Useful resources","text":""},{"location":"resources/#official-ibm-documentation","title":"Official IBM documentation","text":"<ul> <li>Online <code>wsadmin</code> documentation</li> <li>(PDF) Jython scripting with <code>wsadmin</code> tutorial</li> <li>(PDF) Scripting various types of applications - Very big file (&gt; 700 pages) with lots of info on how to automate a large range of operations by making use of the <code>wsadmin</code>.</li> </ul>"},{"location":"resources/#python-documentation","title":"Python documentation","text":"<ul> <li>Python 2.1</li> <li>Python 2.7</li> </ul>"},{"location":"resources/#collection-of-scripts","title":"Collection of scripts","text":"<ul> <li><code>wsadmin-tools</code> by @sgurjar - Collection of useful functions meant to ease server administration through <code>wsadmin</code>.</li> <li><code>wsadminlib</code> by @wsadminlib - A library which simplifies configuration of IBM WebSphere AppServer using python scripting.</li> </ul>"},{"location":"resources/#other","title":"Other","text":"<ul> <li>Stackoverflow - Doesn't need any explanation \ud83d\ude36</li> <li>FreeKB \"IBM Websphere\" articles - Collection of articles about the administration of an \"IBM WebSphere Application Server\" infrastructure (not only with <code>wsadmin</code>)</li> <li>WsAdmin Objects - Simple explanation of the difference between the 4 main objects used by the <code>wsadmin</code></li> <li>SetGetWeb WAS - Something is ripped from the IBM documentation, something else is useful; worth of a glance anyway.</li> </ul>"},{"location":"reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>wsadmin_type_hints<ul> <li>AdminApp</li> <li>AdminConfig</li> <li>AdminControl</li> <li>AdminTask</li> <li>Help</li> <li>wsadmin_types</li> </ul> </li> </ul>"},{"location":"reference/wsadmin_type_hints/","title":"wsadmin_type_hints","text":"<p><code>import</code> this module to gain intellisense on the 5 main <code>wsadmin.sh</code> Jython language objects:</p> <ul> <li><code>AdminControl</code></li> <li><code>AdminConfig</code></li> <li><code>AdminApp</code></li> <li><code>AdminTask</code></li> <li><code>Help</code></li> </ul> <p>Use it like this: <pre><code>try:\n(AdminControl, AdminConfig, AdminApp, AdminTask, Help)\nexcept NameError:\nfrom wsadmin_type_hints import *   # type: ignore\nelse:\nprint(\"AdminControl is already defined, no shim needed\")\n</code></pre></p> <p>This way it will be imported only in your development environment.</p>"},{"location":"reference/wsadmin_type_hints/AdminApp/","title":"AdminApp","text":"<p>Use the <code>AdminApp</code> object to install, modify, and administer applications.</p> <p>The <code>AdminApp</code> object interacts with the WebSphere\u00ae Application Server management  and configuration services to make application inquiries and changes.</p> <p>This interaction includes installing and uninstalling applications, listing modules,  exporting, and so on.</p> <p>For more info see the official documentation.</p>"},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.deleteUserAndGroupEntries","title":"<code>AdminApp.deleteUserAndGroupEntries()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.edit","title":"<code>AdminApp.edit()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.editInteractive","title":"<code>AdminApp.editInteractive()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.export","title":"<code>AdminApp.export()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.exportDDL","title":"<code>AdminApp.exportDDL()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.exportFile","title":"<code>AdminApp.exportFile()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.getDeployStatus","title":"<code>AdminApp.getDeployStatus()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.help","title":"<code>AdminApp.help()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.install","title":"<code>AdminApp.install()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.installInteractive","title":"<code>AdminApp.installInteractive()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.isAppReady","title":"<code>AdminApp.isAppReady()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.list","title":"<code>AdminApp.list()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.listModules","title":"<code>AdminApp.listModules()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.options","title":"<code>AdminApp.options()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.publishWSDL","title":"<code>AdminApp.publishWSDL()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.searchJNDIReferences","title":"<code>AdminApp.searchJNDIReferences()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.taskInfo","title":"<code>AdminApp.taskInfo()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.uninstall","title":"<code>AdminApp.uninstall()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.update","title":"<code>AdminApp.update()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.updateAccessIDs","title":"<code>AdminApp.updateAccessIDs()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.updateInteractive","title":"<code>AdminApp.updateInteractive()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminApp/#wsadmin_type_hints.AdminApp.view","title":"<code>AdminApp.view()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/","title":"AdminConfig","text":"<p>Use the <code>AdminConfig</code> object to invoke configuration commands and to create or  change elements of the WebSphere\u00ae Application Server configuration, for example,  creating a data source.</p> <p>For more info see the official documentation.</p>"},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.attributes","title":"<code>AdminConfig.attributes(object_type)</code>","text":"<p>Get a multiline string containing the top level attributes for the given type.</p> PARAMETER DESCRIPTION <code>object_type</code> <p>name of the object type. Use <code>AdminConfig.types()</code> to get a list of available types.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>str</code> <p>Multiline string with the top level attributes for the given type.</p> <p> TYPE: <code>str</code> </p>"},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.checkin","title":"<code>AdminConfig.checkin(document_uri, file_name, opaque_object)</code>","text":"<p>Checks a file that the document URI describes into the configuration repository. This method only applies to deployment manager configurations.</p> PARAMETER DESCRIPTION <code>document_uri</code> <p>The document URI, relative to the root of the configuration repository.</p> <p> TYPE: <code>str</code> </p> <code>file_name</code> <p>The name of the source file to check.</p> <p> TYPE: <code>str</code> </p> <code>opaque_object</code> <p>The object returned by a prior call to the <code>AdminConfig.extract()</code> command.</p> <p> TYPE: <code>_OpaqueDigestObject</code> </p>"},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.convertToCluster","title":"<code>AdminConfig.convertToCluster()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.create","title":"<code>AdminConfig.create()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.createClusterMember","title":"<code>AdminConfig.createClusterMember()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.createDocument","title":"<code>AdminConfig.createDocument()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.createUsingTemplate","title":"<code>AdminConfig.createUsingTemplate()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.defaults","title":"<code>AdminConfig.defaults()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.deleteDocument","title":"<code>AdminConfig.deleteDocument()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.existsDocument","title":"<code>AdminConfig.existsDocument()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.extract","title":"<code>AdminConfig.extract(document_uri, filename)</code>","text":"<p>Extracts a configuration repository file that is described by the document URI and places it in the file named by filename.  This method only applies to deployment manager configurations.</p> PARAMETER DESCRIPTION <code>document_uri</code> <p>The document URI, relative to the root of the configuration repository. This MUST exist in the repository.</p> <p> TYPE: <code>str</code> </p> <code>filename</code> <p>The name of the source file to check. If it exists already, it will be overwritten.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>_OpaqueDigestObject</code> <p>An opaque \"digest\" object which should be used to check the file back in using the checkin command.</p> <p> TYPE: <code>_OpaqueDigestObject</code> </p>"},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.getCrossDocumentValidationEnabled","title":"<code>AdminConfig.getCrossDocumentValidationEnabled()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.getObjectName","title":"<code>AdminConfig.getObjectName()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.getObjectType","title":"<code>AdminConfig.getObjectType()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.getSaveMode","title":"<code>AdminConfig.getSaveMode()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.getValidationLevel","title":"<code>AdminConfig.getValidationLevel()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.getValidationSeverityResult","title":"<code>AdminConfig.getValidationSeverityResult()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.getid","title":"<code>AdminConfig.getid()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.hasChanges","title":"<code>AdminConfig.hasChanges()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.help","title":"<code>AdminConfig.help()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.installResourceAdapter","title":"<code>AdminConfig.installResourceAdapter()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.list","title":"<code>AdminConfig.list()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.listTemplates","title":"<code>AdminConfig.listTemplates()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.modify","title":"<code>AdminConfig.modify()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.parents","title":"<code>AdminConfig.parents()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.queryChanges","title":"<code>AdminConfig.queryChanges()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.remove","title":"<code>AdminConfig.remove()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.required","title":"<code>AdminConfig.required()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.reset","title":"<code>AdminConfig.reset()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.resetAttributes","title":"<code>AdminConfig.resetAttributes()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.save","title":"<code>AdminConfig.save()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.setCrossDocumentValidationEnabled","title":"<code>AdminConfig.setCrossDocumentValidationEnabled()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.setSaveMode","title":"<code>AdminConfig.setSaveMode()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.setValidationLevel","title":"<code>AdminConfig.setValidationLevel()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.show","title":"<code>AdminConfig.show()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.showAttribute","title":"<code>AdminConfig.showAttribute()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.showall","title":"<code>AdminConfig.showall()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.types","title":"<code>AdminConfig.types()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.uninstallResourceAdapter","title":"<code>AdminConfig.uninstallResourceAdapter()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.unsetAttributes","title":"<code>AdminConfig.unsetAttributes()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminConfig/#wsadmin_type_hints.AdminConfig.validate","title":"<code>AdminConfig.validate()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/","title":"AdminControl","text":"<p>Use the AdminControl object to invoke operational commands that manage objects for the application server.</p> <p>Many of the AdminControl commands have multiple signatures so that they can either invoke in a raw mode using  parameters that are specified by Java Management Extensions (JMX), or by using strings for parameters.  In addition to operational commands, the AdminControl object supports some utility commands for tracing,  reconnecting with a server, and converting data types.</p> <p>For more info see the official documentation.</p>"},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.completeObjectName","title":"<code>AdminControl.completeObjectName(object_name, template='')</code>","text":"<p>Use the <code>completeObjectName</code> command to create a string representation of a complete <code>ObjectName</code> value  that is based on a fragment. </p> <p>This command does not communicate with the server to find a matching <code>ObjectName</code> value. </p> <p>If the system finds several MBeans that match the fragment, the command returns the first one. </p> PARAMETER DESCRIPTION <code>object_name</code> <p>Specifies the name of the object to complete.</p> <p> TYPE: <code>ObjectName</code> </p> <code>template</code> <p>Specifies the name of the template to use. For example, the template might be <code>type=Server,*.</code>.</p> <p> TYPE: <code>str</code> DEFAULT: <code>''</code> </p> <p>Example: <pre><code>server_on = AdminControl.completeObjectName('node=mynode,type=Server,*')\n</code></pre></p>"},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.getAttribute","title":"<code>AdminControl.getAttribute(object_name, attribute)</code>","text":"<p>Use the <code>getAttribute</code> command to return the value of the attribute for the name that you provide.</p> <p>If you use the <code>getAttribute</code> command to determine the state of an application, one of the following values is returned: - 0 - which indicates that the application is starting - 1 - which indicates that the application has started - 2 - which indicates that the application is stopping - 3 - which indicates that the application has stopped - 4 - which indicates that the application failed to start</p> PARAMETER DESCRIPTION <code>object_name</code> <p>Specifies the object name of the MBean of interest.</p> <p> TYPE: <code>ObjectName</code> </p> <code>attribute</code> <p>Specifies the name of the attribute to query.</p> <p> TYPE: <code>str</code> </p> <p>Example: <pre><code>objNameString = AdminControl.completeObjectName('WebSphere:type=Server,*') \nprocess_type  = AdminControl.getAttribute(objNameString, 'processType')\n\nprint(process_type)\n</code></pre></p>"},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.getAttribute_jmx","title":"<code>AdminControl.getAttribute_jmx(object_name, attribute)</code>","text":"<p>Use the <code>getAttribute_jmx</code> command to return the value of the attribute for the name that you provide.</p> PARAMETER DESCRIPTION <code>object_name</code> <p>Specifies the object name of the MBean of interest.</p> <p> TYPE: <code>ObjectName</code> </p> <code>attribute</code> <p>Specifies the name of the attribute to query.</p> <p> TYPE: <code>str</code> </p> <p>Example: <pre><code>import javax.management as mgmt \n\nobjNameString = AdminControl.completeObjectName('WebSphere:=type=Server,*') \nobjName       = mgmt.ObjectName(objNameString)\nprocess_type  = AdminControl.getAttribute_jmx(objName, 'processType')\n\nprint(process_type)\n</code></pre></p>"},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.getAttributes","title":"<code>AdminControl.getAttributes(object_name, attributes)</code>","text":"<p>Use the getAttributes command to return the attribute values for the names that you provide.</p> PARAMETER DESCRIPTION <code>object_name</code> <p>Use the getAttributes command to return the attribute values for the names that you provide.</p> <p> TYPE: <code>ObjectName</code> </p> <code>attributes</code> <p>Specifies the names of the attributes to query.</p> <p> TYPE: <code>java.lang.String[] or java.lang.Object[]</code> </p> <p>Example: - Using Jython with string attributes:</p> <pre><code>objNameString = AdminControl.completeObjectname('WebSphere:type=Server,*)\nattributes    = AdminControl.getAttributes(objNameString, '[cellName nodeName]')\n\nprint(attributes)\n</code></pre> <ul> <li>Using Jython with object attributes:</li> </ul> <pre><code>objNameString = AdminControl.completeObjectname('WebSphere:type=Server,*)\nattributes    = AdminControl.getAttributes(objNameString, ['cellName', 'nodeName'])\n\nprint(attributes)\n</code></pre>"},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.getAttributes_jmx","title":"<code>AdminControl.getAttributes_jmx()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.getCell","title":"<code>AdminControl.getCell()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.getConfigId","title":"<code>AdminControl.getConfigId()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.getDefaultDomain","title":"<code>AdminControl.getDefaultDomain()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.getDomainName","title":"<code>AdminControl.getDomainName()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.getHost","title":"<code>AdminControl.getHost()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.getMBeanCount","title":"<code>AdminControl.getMBeanCount()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.getMBeanInfo_jmx","title":"<code>AdminControl.getMBeanInfo_jmx()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.getNode","title":"<code>AdminControl.getNode()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.getObjectInstance","title":"<code>AdminControl.getObjectInstance()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.getPort","title":"<code>AdminControl.getPort()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.getPropertiesForDataSource","title":"<code>AdminControl.getPropertiesForDataSource()</code>","text":"<p>(Deprecated)</p>"},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.getType","title":"<code>AdminControl.getType()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.help","title":"<code>AdminControl.help()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.invoke","title":"<code>AdminControl.invoke()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.invoke_jmx","title":"<code>AdminControl.invoke_jmx()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.isRegistered","title":"<code>AdminControl.isRegistered()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.isRegistered_jmx","title":"<code>AdminControl.isRegistered_jmx()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.makeObjectName","title":"<code>AdminControl.makeObjectName()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.queryMBeans","title":"<code>AdminControl.queryMBeans()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.queryNames","title":"<code>AdminControl.queryNames()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.queryNames_jmx","title":"<code>AdminControl.queryNames_jmx()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.reconnect","title":"<code>AdminControl.reconnect()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.setAttribute","title":"<code>AdminControl.setAttribute()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.setAttribute_jmx","title":"<code>AdminControl.setAttribute_jmx()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.setAttributes","title":"<code>AdminControl.setAttributes()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.setAttributes_jmx","title":"<code>AdminControl.setAttributes_jmx()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.startServer","title":"<code>AdminControl.startServer()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.stopServer","title":"<code>AdminControl.stopServer()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.testConnection","title":"<code>AdminControl.testConnection()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminControl/#wsadmin_type_hints.AdminControl.trace","title":"<code>AdminControl.trace()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminTask/","title":"AdminTask","text":"<p>Use the <code>AdminTask</code> object to run administrative commands with the <code>wsadmin</code> tool.</p> <p>Administrative commands are loaded dynamically when you start the <code>wsadmin</code> tool. </p> <p>The administrative commands that are available for you to use, and what you can do  with them, depends on the edition of the product that you use.</p> <p>For more info see the official documentation.</p>"},{"location":"reference/wsadmin_type_hints/AdminTask/#wsadmin_type_hints.AdminTask.createTCPEndPoint","title":"<code>AdminTask.createTCPEndPoint(target_object, endpoint_configuration)</code>","text":"<p>Create a new endpoint that you can associate with a TCP inbound channel.</p> <ul> <li>If <code>target_object</code> is set to a string with value <code>\"-interactive\"</code>, the endpoint will      be created in interactive mode.</li> </ul> PARAMETER DESCRIPTION <code>target_object</code> <p>Parent instance of the TransportChannelService that contains the TCPInboundChannel. If <code>target_object</code> is set to a string with value <code>\"-interactive\"</code>, the endpoint will be created in interactive mode.</p> <p> TYPE: <code>ConfigurationObjectName | str</code> </p> <code>endpoint_configuration</code> <p>String containing the <code>-name</code>, <code>-host</code> and <code>-port</code> parameters (all required) with their values set.</p> <p> TYPE: <code>str | list</code> </p> RETURNS DESCRIPTION <code>ConfigurationObjectName</code> <p>The object name of the endpoint that was created.</p> <p> TYPE: <code>ConfigurationObjectName</code> </p> Example <pre><code>&gt;&gt;&gt; target = 'cells/mybuildCell01/nodes/mybuildCellManager01/servers/dmgr|server.xml#TransportChannelService_1'\n# As a string...\n&gt;&gt;&gt; AdminTask.createTCPEndPoint(target, '[-name Sample_End_Pt_Name -host mybuild.location.ibm.com -port 8978]')\n# ... or as a list...\n&gt;&gt;&gt; AdminTask.createTCPEndPoint(target, ['-name', 'Sample_End_Pt_Name', '-host', 'mybuild.location.ibm.com', '-port', '8978'])\n</code></pre>"},{"location":"reference/wsadmin_type_hints/AdminTask/#wsadmin_type_hints.AdminTask.getTCPEndPoint","title":"<code>AdminTask.getTCPEndPoint()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminTask/#wsadmin_type_hints.AdminTask.help","title":"<code>AdminTask.help()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminTask/#wsadmin_type_hints.AdminTask.listTCPEndPoints","title":"<code>AdminTask.listTCPEndPoints()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminTask/#wsadmin_type_hints.AdminTask.listTCPThreadPools","title":"<code>AdminTask.listTCPThreadPools()</code>","text":""},{"location":"reference/wsadmin_type_hints/AdminTask/#wsadmin_type_hints.AdminTask.updateAppOnCluster","title":"<code>AdminTask.updateAppOnCluster()</code>","text":""},{"location":"reference/wsadmin_type_hints/Help/","title":"Help","text":"<p>You can use the <code>Help</code> command to find general help and dynamic online information. </p> <p>Use the <code>Help</code> object as an aid in writing and running scripts with the <code>AdminControl</code> object.</p> <p>For more info see the official documentation.</p>"},{"location":"reference/wsadmin_type_hints/Help/#wsadmin_type_hints.Help.AdminApp","title":"<code>Help.AdminApp()</code>","text":"<p>Use the <code>AdminApp</code> command to view a summary of each available method for the <code>AdminApp</code> object.</p> RETURNS DESCRIPTION <code>str</code> <p>The list of available methods for the <code>AdminApp</code> object.</p> <p> TYPE: <code>str</code> </p> Example <pre><code>&gt;&gt;&gt; print(Help.AdminApp())\n    WASX7095I: The AdminApp object allows application objects to\n    be manipulated -- this includes installing, uninstalling, editing,\n    and listing.  Most of the commands supported by AdminApp operate in two\n    modes: the default mode is one in which AdminApp communicates with the\n    product to accomplish its tasks.  A local mode is also\n    possible, in which no server communication takes place.  The local\n    mode of operation is invoked by bringing up the scripting client with\n    no server connected using the command line \"-conntype NONE\" option or setting the \n    \"com.ibm.ws.scripting.connectionType=NONE\" property in the wsadmin.properties.\n    [...]\n</code></pre>"},{"location":"reference/wsadmin_type_hints/Help/#wsadmin_type_hints.Help.AdminConfig","title":"<code>Help.AdminConfig()</code>","text":"<p>Use the <code>AdminConfig</code> command to view a summary of each available method for the <code>AdminConfig</code> object.</p> RETURNS DESCRIPTION <code>str</code> <p>The list of available methods for the <code>AdminConfig</code> object.</p> <p> TYPE: <code>str</code> </p> Example <pre><code>&gt;&gt;&gt; print(Help.AdminApp())\n    WASX7053I: The following functions are supported by AdminConfig: \n    [...]\n</code></pre>"},{"location":"reference/wsadmin_type_hints/Help/#wsadmin_type_hints.Help.AdminControl","title":"<code>Help.AdminControl()</code>","text":"<p>Use the <code>AdminControl</code> command to view a summary of each available method for the <code>AdminControl</code> object.</p> RETURNS DESCRIPTION <code>str</code> <p>The list of available methods for the <code>AdminControl</code> command.</p> <p> TYPE: <code>str</code> </p> Example <pre><code>&gt;&gt;&gt; print(Help.AdminControl())\n    WASX7027I: The following functions are supported by AdminControl:\n    [...]\n</code></pre>"},{"location":"reference/wsadmin_type_hints/Help/#wsadmin_type_hints.Help.AdminTask","title":"<code>Help.AdminTask()</code>","text":"<p>Use the <code>AdminTask</code> command to view a summary of each available method for the <code>AdminTask</code> object.</p> RETURNS DESCRIPTION <code>str</code> <p>The list of available methods for the <code>AdminTask</code> command.</p> <p> TYPE: <code>str</code> </p> Example <pre><code>&gt;&gt;&gt; print(Help.AdminTask())\n    WASX8001I: The AdminTask object enables the available administrative commands. AdminTask commands \n    operate in two modes: the default mode is one whichAdminTask communicates with the\n    product to accomplish its task. A local mode \n    is also available in which no server communication takes place. The local mode of operation is invoked by \n    bringing up the scripting client using the command line \"-conntype NONE\" option or setting the\n    \"com.ibm.ws.scripting.connectiontype=NONE\" property in wsadmin.properties file.\n    [...]\n</code></pre>"},{"location":"reference/wsadmin_type_hints/Help/#wsadmin_type_hints.Help.all","title":"<code>Help.all(mbean_name)</code>","text":"<p>Use the <code>all</code> command to view a summary of all the information associated with the MBean      identified by <code>mbean_name</code>.</p> PARAMETER DESCRIPTION <code>mbean_name</code> <p>The object name which identifies the desired MBean.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>str</code> <p>Summary of the information requested.</p> <p> TYPE: <code>str</code> </p> Example <pre><code>&gt;&gt;&gt; mbean = AdminControl.queryNames('type=Server,*').splitlines()[0]\n&gt;&gt;&gt; print(Help.all(mbean))\n    Description: Managed object for overall server process.\n    Class name: javax.management.modelmbean.RequiredModelMBean\n    Attribute                       Type                            Access\n    name                            java.lang.String                RO\n    shortName                       java.lang.String                RO\n    threadMonitorInterval           int                             RW\n    threadMonitorThreshold          int                             RW\n    threadMonitorAdjustmentThreshold  int                             RW\n    pid                             java.lang.String                RO\n    cellName                        java.lang.String                RO\n    cellShortName                   java.lang.String                RO\n    [...]\n</code></pre>"},{"location":"reference/wsadmin_type_hints/Help/#wsadmin_type_hints.Help.attributes","title":"<code>Help.attributes(mbean_name, attribute_name=None)</code>","text":"<p>Use the <code>attributes</code> command to view a summary of all the attributes of the MBean identified by <code>mbean_name</code>. </p> <ul> <li> <p>If the <code>attribute_name</code> parameter is omitted, the command displays information about all the attributes, operations,      constructors, description, notifications, and classname of the specified MBean. </p> </li> <li> <p>If the <code>attribute_name</code> parameter is set, the command will display only the information about     the specified attribute.</p> </li> </ul> PARAMETER DESCRIPTION <code>mbean_name</code> <p>The object name which identifies the desired MBean.</p> <p> TYPE: <code>str</code> </p> <code>attribute_name</code> <p>The attribute of interest. Defaults to None.</p> <p> TYPE: <code>str</code> DEFAULT: <code>None</code> </p> RETURNS DESCRIPTION <code>str</code> <p>Summary of all the attributes of the specified MBean</p> <p> TYPE: <code>str</code> </p> Example <pre><code>&gt;&gt;&gt; mbean = AdminControl.queryNames('type=Server,*').splitlines()[0]\n&gt;&gt;&gt; print(Help.attributes(mbean))\n    Attribute                       Type                            Access\n    name                            java.lang.String                RO\n    shortName                       java.lang.String                RO\n    threadMonitorInterval           int                             RW\n    threadMonitorThreshold          int                             RW\n    threadMonitorAdjustmentThreshold  int                             RW\n    [...]\n&gt;&gt;&gt; print(Help.attributes(mbean, \"pid\"))\n    Attribute                       Type                            Access\n    pid                             java.lang.String                RO\n    Description: Process id for the server process.\n</code></pre>"},{"location":"reference/wsadmin_type_hints/Help/#wsadmin_type_hints.Help.classname","title":"<code>Help.classname(mbean_name)</code>","text":"<p>Use the <code>classname</code> command to get the class name associated with the MBean      identified by <code>mbean_name</code>.</p> PARAMETER DESCRIPTION <code>mbean_name</code> <p>The object name which identifies the desired MBean.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>str</code> <p>The class name represented by the MBean name.</p> <p> TYPE: <code>str</code> </p> Example <pre><code>&gt;&gt;&gt; mbean = AdminControl.queryNames('type=Server,*').splitlines()[0]\n&gt;&gt;&gt; print(Help.classname(mbean))\n    javax.management.modelmbean.RequiredModelMBean\n</code></pre>"},{"location":"reference/wsadmin_type_hints/Help/#wsadmin_type_hints.Help.constructors","title":"<code>Help.constructors(mbean_name)</code>","text":"<p>Use the <code>constructors</code> command to get all the constructors associated with the MBean      identified by <code>mbean_name</code>.</p> PARAMETER DESCRIPTION <code>mbean_name</code> <p>The object name which identifies the desired MBean.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>str</code> <p>The summary of all the constructors.</p> <p> TYPE: <code>str</code> </p> Example <pre><code>&gt;&gt;&gt; mbean = AdminControl.queryNames('type=Server,*').splitlines()[0]\n&gt;&gt;&gt; print(Help.constructors(mbean))\n    Constructors\n</code></pre>"},{"location":"reference/wsadmin_type_hints/Help/#wsadmin_type_hints.Help.description","title":"<code>Help.description(mbean_name)</code>","text":"<p>Use the <code>description</code> command to view a description of the MBean identified by <code>mbean_name</code>.</p> PARAMETER DESCRIPTION <code>mbean_name</code> <p>The object name which identifies the desired MBean.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>str</code> <p>The description of the requested MBean.</p> <p> TYPE: <code>str</code> </p> Example <pre><code>&gt;&gt;&gt; mbean = AdminControl.queryNames('type=Server,*').splitlines()[0]\n&gt;&gt;&gt; print(Help.description(mbean))\n    Managed object for overall server process.\n</code></pre>"},{"location":"reference/wsadmin_type_hints/Help/#wsadmin_type_hints.Help.help","title":"<code>Help.help()</code>","text":"<p>Use the <code>help</code> command to view a summary of all the available methods for the <code>Help</code> object.</p> RETURNS DESCRIPTION <code>str</code> <p>Summary of all the available methods for the Help object.</p> <p> TYPE: <code>str</code> </p> Example <pre><code>&gt;&gt;&gt; print(Help.help())\n    WASX7028I: The Help object has two purposes:\n    [...]\n</code></pre>"},{"location":"reference/wsadmin_type_hints/Help/#wsadmin_type_hints.Help.message","title":"<code>Help.message(message_id)</code>","text":"<p>Use the <code>message</code> command to view information for a message ID.</p> PARAMETER DESCRIPTION <code>message_id</code> <p>The desired message ID.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>str</code> <p>A description for the provided message ID.</p> <p> TYPE: <code>str</code> </p> Example <pre><code>&gt;&gt;&gt; print(Help.message('CNTR0005W'))\n    Explanation: The container was unable to passivate an enterprise bean due to exception {2} \n    User action: Take action based upon message in exception {2}\n</code></pre> More testing needed <p>I couldn't properly test this command in my test environment since it kept raising an Exception.</p>"},{"location":"reference/wsadmin_type_hints/Help/#wsadmin_type_hints.Help.notifications","title":"<code>Help.notifications(mbean_name)</code>","text":"<p>Use the <code>notifications</code> command to view a summary of all the notifications associated with the MBean      identified by <code>mbean_name</code>.</p> PARAMETER DESCRIPTION <code>mbean_name</code> <p>The object name which identifies the desired MBean.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>str</code> <p>A multiline string containing all the MBean notifications.</p> <p> TYPE: <code>str</code> </p> Example <pre><code>&gt;&gt;&gt; mbean = AdminControl.queryNames('type=Server,*').splitlines()[0]\n&gt;&gt;&gt; print(Help.notifications(mbean))\n    Notifications\n    j2ee.state.starting\n    j2ee.state.running\n    j2ee.state.stopping\n    j2ee.state.stopped\n    j2ee.state.failed\n    j2ee.attribute.changed\n    jmx.attribute.changed\n</code></pre>"},{"location":"reference/wsadmin_type_hints/Help/#wsadmin_type_hints.Help.operations","title":"<code>Help.operations(mbean_name, operation_name=None)</code>","text":"<p>Use the <code>operations</code> command to view a summary of all the operations associated with the MBean      identified by <code>mbean_name</code>.</p> <ul> <li>If the <code>operation_name</code> parameter is set, it will be displayed only the signature of the      requested operation.</li> </ul> PARAMETER DESCRIPTION <code>mbean_name</code> <p>The object name which identifies the desired MBean.</p> <p> TYPE: <code>str</code> </p> <code>operation_name</code> <p>The operation of interest. Defaults to None.</p> <p> TYPE: <code>str</code> DEFAULT: <code>None</code> </p> Example <pre><code>&gt;&gt;&gt; mbean = AdminControl.queryNames('type=Server,*').splitlines()[0]\n&gt;&gt;&gt; print(Help.operations(mbean))\n    Operation\n    int getRingBufferSize()\n    void setRingBufferSize(int)\n    java.lang.String getTraceSpecification()\n    void setTraceState(java.lang.String)\n    void appendTraceString(java.lang.String)\n    void dumpRingBuffer(java.lang.String)\n    void clearRingBuffer()\n    [Ljava.lang.String; listAllRegisteredComponents()\n    [Ljava.lang.String; listAllRegisteredGroups()\n    [Ljava.lang.String; listComponentsInGroup(java.lang.String)\n    [Lcom.ibm.websphere.ras.TraceElementState; getTracedComponents()\n    [Lcom.ibm.websphere.ras.TraceElementState; getTracedGroups()\n    java.lang.String getTraceSpecification(java.lang.String)\n    void processDumpString(java.lang.String)\n    void checkTraceString(java.lang.String)\n    void setTraceOutputToFile(java.lang.String, int, int, java.lang.String)\n    void setTraceOutputToRingBuffer(int, java.lang.String)\n    java.lang.String rolloverLogFileImmediate(java.lang.String, java.lang.String)\n&gt;&gt;&gt; print(Help.operations(mbean, 'processDumpString'))\n    void processDumpString(string)\n    Description: Write the contents of the Ras \n    services ring buffer to the specified file.\n    Parameters:\n    Type         string\n    Name         dumpString\n    Description  A String in the specified format to process or null.\n</code></pre>"},{"location":"reference/wsadmin_type_hints/wsadmin_types/","title":"wsadmin_types","text":"<p>Module used internally by <code>wsadmin-type-hints</code> to define appropriate return types for some <code>wsadmin</code> methods.</p> Warning <p>These are NOT real classes, so they can't be used as-is.</p> <p>The actual return type is the one they inherit from (for example <code>RunningObjectName</code> inherits from <code>str</code>,      so the actual return type will be <code>str</code>).</p> <p>This structure is needed to make the code more pythonic and readable. It also makes it clear just by glancing to the method signature which value must be passed,     instead of remembering which <code>wsadmin</code> object method returns the correct Object name.</p>"},{"location":"reference/wsadmin_type_hints/wsadmin_types/#wsadmin_type_hints.wsadmin_types.ConfigurationObjectName","title":"<code>ConfigurationObjectName</code>","text":"<p>         Bases: <code>str</code></p> <p>Object name representing an entry in the configuration.</p> Example <pre><code>\"Db2JdbcDriver(cells/testcell/nodes/testnode|resources.xml#JDBCProvider_1)\"\n</code></pre>"},{"location":"reference/wsadmin_type_hints/wsadmin_types/#wsadmin_type_hints.wsadmin_types.ContainmentPath","title":"<code>ContainmentPath</code>","text":"<p>         Bases: <code>str</code></p> <p>Represents the path of a resource in the configuration.</p> <p>The containment path must be a path that contains the correct hierarchical order.  For example, if you specify /Server:server1/Node:node/ as the containment path,      you do not receive a valid configuration ID because Node is a parent of Server and comes before Server in the hierarchy.</p> Example <pre><code>\"/Cell:testcell/Node:testNode/JDBCProvider:Db2JdbcDriver/\"\n</code></pre>"},{"location":"reference/wsadmin_type_hints/wsadmin_types/#wsadmin_type_hints.wsadmin_types.RunningObjectName","title":"<code>RunningObjectName</code>","text":"<p>         Bases: <code>str</code></p> <p>This <code>ObjectName</code> uniquely identifies running objects and is in the      form <code>[domainName]:property=value[,property=value]*</code>.</p> <p>The <code>RunningObjectName</code> class consists of the following elements:</p> <ul> <li>The domain name <code>\"WebSphere\"</code>.</li> <li>Several key properties, for example:<ul> <li><code>type</code> indicates the type of object that is accessible through the MBean, for example, ApplicationServer, and EJBContainer.</li> <li><code>name</code> represents the display name of the particular object, for example, MyServer.</li> <li><code>node</code> represents the name of the node on which the object runs.</li> <li><code>process</code> represents the name of the server process in which the object runs.</li> <li><code>mbeanIdentifier</code> correlates the MBean instance with corresponding configuration data.</li> </ul> </li> </ul> <p>You can use the asterisk (*) at the end as a wildcard character, so that you do not have to specify the entire set of key properties.</p> <p>For more info see the official documentation.</p> Example <pre><code>\"WebSphere:name=\"My Server\",type=ApplicationServer,node=n1,*\"\n</code></pre>"},{"location":"reference/wsadmin_type_hints/wsadmin_types/#wsadmin_type_hints.wsadmin_types._OpaqueDigestObject","title":"<code>_OpaqueDigestObject</code>","text":"<p>         Bases: <code>object</code></p> <p>Opaque \"digest\" object returned by a call to the <code>AdminConfig.extract()</code> method.</p> More testing needed <p>I didn't test this command in my test environment but i will need to, in order to better understand it.</p>"}]}